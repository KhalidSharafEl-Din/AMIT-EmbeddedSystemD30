
ADC_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cf0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  00000cf0  00000d84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00800066  00800066  00000d8a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d8a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000dbc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000df8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015e5  00000000  00000000  00000f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000098f  00000000  00000000  0000254d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ac3  00000000  00000000  00002edc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d4  00000000  00000000  000039a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006d1  00000000  00000000  00003c74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000af9  00000000  00000000  00004345  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00004e3e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__mulsf3_pse+0x10>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <LCD_SendCommand+0x6>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <ADC_setReslution+0x10>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	e0 ef       	ldi	r30, 0xF0	; 240
 162:	fc e0       	ldi	r31, 0x0C	; 12
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	a6 36       	cpi	r26, 0x66	; 102
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	a6 e6       	ldi	r26, 0x66	; 102
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	ab 36       	cpi	r26, 0x6B	; 107
 17c:	b2 07       	cpc	r27, r18
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	0e 94 b1 02 	call	0x562	; 0x562 <main>
 184:	0c 94 76 06 	jmp	0xcec	; 0xcec <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <ADC_enable>:

void ADC_enableInterrupt(){
    SET_BIT(ADCSRA, ADIE);
}
void ADC_desabileInterrupt(){
    CLEAR_BIT(ADCSRA, ADIE);
 18c:	86 b1       	in	r24, 0x06	; 6
 18e:	80 68       	ori	r24, 0x80	; 128
 190:	86 b9       	out	0x06, r24	; 6
 192:	08 95       	ret

00000194 <ADC_vrefSelect>:
 194:	97 b1       	in	r25, 0x07	; 7
 196:	9f 73       	andi	r25, 0x3F	; 63
 198:	97 b9       	out	0x07, r25	; 7
 19a:	27 b1       	in	r18, 0x07	; 7
 19c:	30 e4       	ldi	r19, 0x40	; 64
 19e:	83 9f       	mul	r24, r19
 1a0:	c0 01       	movw	r24, r0
 1a2:	11 24       	eor	r1, r1
 1a4:	82 2b       	or	r24, r18
 1a6:	87 b9       	out	0x07, r24	; 7
 1a8:	08 95       	ret

000001aa <ADC_setReslution>:
 1aa:	97 b1       	in	r25, 0x07	; 7
 1ac:	9f 7d       	andi	r25, 0xDF	; 223
 1ae:	97 b9       	out	0x07, r25	; 7
 1b0:	27 b1       	in	r18, 0x07	; 7
 1b2:	30 e2       	ldi	r19, 0x20	; 32
 1b4:	83 9f       	mul	r24, r19
 1b6:	c0 01       	movw	r24, r0
 1b8:	11 24       	eor	r1, r1
 1ba:	82 2b       	or	r24, r18
 1bc:	87 b9       	out	0x07, r24	; 7
 1be:	08 95       	ret

000001c0 <ADC_setPrescaler>:
 1c0:	96 b1       	in	r25, 0x06	; 6
 1c2:	98 7f       	andi	r25, 0xF8	; 248
 1c4:	96 b9       	out	0x06, r25	; 6
 1c6:	96 b1       	in	r25, 0x06	; 6
 1c8:	89 2b       	or	r24, r25
 1ca:	86 b9       	out	0x06, r24	; 6
 1cc:	08 95       	ret

000001ce <ADC_desaibleAutoTrigger>:
 1ce:	86 b1       	in	r24, 0x06	; 6
 1d0:	8f 7d       	andi	r24, 0xDF	; 223
 1d2:	86 b9       	out	0x06, r24	; 6
 1d4:	08 95       	ret

000001d6 <ADC_init>:
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	0e 94 ca 00 	call	0x194	; 0x194 <ADC_vrefSelect>
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	0e 94 d5 00 	call	0x1aa	; 0x1aa <ADC_setReslution>
 1e2:	87 e0       	ldi	r24, 0x07	; 7
 1e4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <ADC_setPrescaler>
 1e8:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ADC_desaibleAutoTrigger>
 1ec:	0e 94 c6 00 	call	0x18c	; 0x18c <ADC_enable>
 1f0:	08 95       	ret

000001f2 <ADC_analogRead10Bit>:
    return ADCH;
}
#elif ADC_RESLUTION == ADC_10BIT_RESELUTION
u16 ADC_analogRead10Bit(u8 Channel){
    // Select required channel 
	ADMUX &= 0b11100000;        // Clear Required Bits 
 1f2:	97 b1       	in	r25, 0x07	; 7
 1f4:	90 7e       	andi	r25, 0xE0	; 224
 1f6:	97 b9       	out	0x07, r25	; 7
    ADMUX |= Channel;           // Set the new value
 1f8:	97 b1       	in	r25, 0x07	; 7
 1fa:	89 2b       	or	r24, r25
 1fc:	87 b9       	out	0x07, r24	; 7
    // Start Conversion
    SET_BIT(ADCSRA, ADSC); 
 1fe:	86 b1       	in	r24, 0x06	; 6
 200:	80 64       	ori	r24, 0x40	; 64
 202:	86 b9       	out	0x06, r24	; 6
    // Wait till conversion finish
    while ((CHECK_BIT(ADCSRA, ADSC)) == 1);
 204:	36 99       	sbic	0x06, 6	; 6
 206:	fe cf       	rjmp	.-4      	; 0x204 <ADC_analogRead10Bit+0x12>
	u8 lowByte = ADCL;
 208:	24 b1       	in	r18, 0x04	; 4
	u8 highByte = ADCH;
 20a:	85 b1       	in	r24, 0x05	; 5
    u16 result =  ((highByte & 0b00000011) << 8) | lowByte ;
 20c:	83 70       	andi	r24, 0x03	; 3
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	98 2f       	mov	r25, r24
 212:	88 27       	eor	r24, r24
	return result;
}
 214:	82 2b       	or	r24, r18
 216:	08 95       	ret

00000218 <DIO_VoidInit>:
    default:
        // error
        return DIO_u8_ERROR;
    }

}
 218:	8d ef       	ldi	r24, 0xFD	; 253
 21a:	8a bb       	out	0x1a, r24	; 26
 21c:	8e e0       	ldi	r24, 0x0E	; 14
 21e:	87 bb       	out	0x17, r24	; 23
 220:	14 ba       	out	0x14, r1	; 20
 222:	11 ba       	out	0x11, r1	; 17
 224:	08 95       	ret

00000226 <DIO_VoidSetPinValue>:
 226:	86 30       	cpi	r24, 0x06	; 6
 228:	29 f1       	breq	.+74     	; 0x274 <DIO_VoidSetPinValue+0x4e>
 22a:	18 f4       	brcc	.+6      	; 0x232 <DIO_VoidSetPinValue+0xc>
 22c:	85 30       	cpi	r24, 0x05	; 5
 22e:	39 f0       	breq	.+14     	; 0x23e <DIO_VoidSetPinValue+0x18>
 230:	08 95       	ret
 232:	87 30       	cpi	r24, 0x07	; 7
 234:	d1 f1       	breq	.+116    	; 0x2aa <DIO_VoidSetPinValue+0x84>
 236:	88 30       	cpi	r24, 0x08	; 8
 238:	09 f4       	brne	.+2      	; 0x23c <DIO_VoidSetPinValue+0x16>
 23a:	52 c0       	rjmp	.+164    	; 0x2e0 <DIO_VoidSetPinValue+0xba>
 23c:	08 95       	ret
 23e:	41 30       	cpi	r20, 0x01	; 1
 240:	59 f4       	brne	.+22     	; 0x258 <DIO_VoidSetPinValue+0x32>
 242:	2b b3       	in	r18, 0x1b	; 27
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_VoidSetPinValue+0x28>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_VoidSetPinValue+0x24>
 252:	82 2b       	or	r24, r18
 254:	8b bb       	out	0x1b, r24	; 27
 256:	08 95       	ret
 258:	41 11       	cpse	r20, r1
 25a:	5c c0       	rjmp	.+184    	; 0x314 <DIO_VoidSetPinValue+0xee>
 25c:	2b b3       	in	r18, 0x1b	; 27
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	02 c0       	rjmp	.+4      	; 0x268 <DIO_VoidSetPinValue+0x42>
 264:	88 0f       	add	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	6a 95       	dec	r22
 26a:	e2 f7       	brpl	.-8      	; 0x264 <DIO_VoidSetPinValue+0x3e>
 26c:	80 95       	com	r24
 26e:	82 23       	and	r24, r18
 270:	8b bb       	out	0x1b, r24	; 27
 272:	08 95       	ret
 274:	41 30       	cpi	r20, 0x01	; 1
 276:	59 f4       	brne	.+22     	; 0x28e <DIO_VoidSetPinValue+0x68>
 278:	28 b3       	in	r18, 0x18	; 24
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_VoidSetPinValue+0x5e>
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_VoidSetPinValue+0x5a>
 288:	82 2b       	or	r24, r18
 28a:	88 bb       	out	0x18, r24	; 24
 28c:	08 95       	ret
 28e:	41 11       	cpse	r20, r1
 290:	41 c0       	rjmp	.+130    	; 0x314 <DIO_VoidSetPinValue+0xee>
 292:	28 b3       	in	r18, 0x18	; 24
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	02 c0       	rjmp	.+4      	; 0x29e <DIO_VoidSetPinValue+0x78>
 29a:	88 0f       	add	r24, r24
 29c:	99 1f       	adc	r25, r25
 29e:	6a 95       	dec	r22
 2a0:	e2 f7       	brpl	.-8      	; 0x29a <DIO_VoidSetPinValue+0x74>
 2a2:	80 95       	com	r24
 2a4:	82 23       	and	r24, r18
 2a6:	88 bb       	out	0x18, r24	; 24
 2a8:	08 95       	ret
 2aa:	41 30       	cpi	r20, 0x01	; 1
 2ac:	59 f4       	brne	.+22     	; 0x2c4 <DIO_VoidSetPinValue+0x9e>
 2ae:	25 b3       	in	r18, 0x15	; 21
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <DIO_VoidSetPinValue+0x94>
 2b6:	88 0f       	add	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	6a 95       	dec	r22
 2bc:	e2 f7       	brpl	.-8      	; 0x2b6 <DIO_VoidSetPinValue+0x90>
 2be:	82 2b       	or	r24, r18
 2c0:	85 bb       	out	0x15, r24	; 21
 2c2:	08 95       	ret
 2c4:	41 11       	cpse	r20, r1
 2c6:	26 c0       	rjmp	.+76     	; 0x314 <DIO_VoidSetPinValue+0xee>
 2c8:	25 b3       	in	r18, 0x15	; 21
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <DIO_VoidSetPinValue+0xae>
 2d0:	88 0f       	add	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	6a 95       	dec	r22
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <DIO_VoidSetPinValue+0xaa>
 2d8:	80 95       	com	r24
 2da:	82 23       	and	r24, r18
 2dc:	85 bb       	out	0x15, r24	; 21
 2de:	08 95       	ret
 2e0:	41 30       	cpi	r20, 0x01	; 1
 2e2:	59 f4       	brne	.+22     	; 0x2fa <DIO_VoidSetPinValue+0xd4>
 2e4:	22 b3       	in	r18, 0x12	; 18
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <DIO_VoidSetPinValue+0xca>
 2ec:	88 0f       	add	r24, r24
 2ee:	99 1f       	adc	r25, r25
 2f0:	6a 95       	dec	r22
 2f2:	e2 f7       	brpl	.-8      	; 0x2ec <DIO_VoidSetPinValue+0xc6>
 2f4:	82 2b       	or	r24, r18
 2f6:	82 bb       	out	0x12, r24	; 18
 2f8:	08 95       	ret
 2fa:	41 11       	cpse	r20, r1
 2fc:	0b c0       	rjmp	.+22     	; 0x314 <DIO_VoidSetPinValue+0xee>
 2fe:	22 b3       	in	r18, 0x12	; 18
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	02 c0       	rjmp	.+4      	; 0x30a <DIO_VoidSetPinValue+0xe4>
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	6a 95       	dec	r22
 30c:	e2 f7       	brpl	.-8      	; 0x306 <DIO_VoidSetPinValue+0xe0>
 30e:	80 95       	com	r24
 310:	82 23       	and	r24, r18
 312:	82 bb       	out	0x12, r24	; 18
 314:	08 95       	ret

00000316 <DIO_VoidSetPortValue>:


void DIO_VoidSetPortValue(u8 DIO_u8_PORT, u8 DIO_u8Val){

    switch (DIO_u8_PORT){
 316:	86 30       	cpi	r24, 0x06	; 6
 318:	59 f0       	breq	.+22     	; 0x330 <DIO_VoidSetPortValue+0x1a>
 31a:	18 f4       	brcc	.+6      	; 0x322 <DIO_VoidSetPortValue+0xc>
 31c:	85 30       	cpi	r24, 0x05	; 5
 31e:	31 f0       	breq	.+12     	; 0x32c <DIO_VoidSetPortValue+0x16>
 320:	08 95       	ret
 322:	87 30       	cpi	r24, 0x07	; 7
 324:	39 f0       	breq	.+14     	; 0x334 <DIO_VoidSetPortValue+0x1e>
 326:	88 30       	cpi	r24, 0x08	; 8
 328:	39 f0       	breq	.+14     	; 0x338 <DIO_VoidSetPortValue+0x22>
 32a:	08 95       	ret
        case DIO_u8_PORTA:
            ASSIGN_PORT(PORTA, DIO_u8Val);
 32c:	6b bb       	out	0x1b, r22	; 27
            break;
 32e:	08 95       	ret
        case DIO_u8_PORTB:
            ASSIGN_PORT(PORTB, DIO_u8Val);
 330:	68 bb       	out	0x18, r22	; 24
            break;
 332:	08 95       	ret
        case DIO_u8_PORTC:
            ASSIGN_PORT(PORTB, DIO_u8Val);
 334:	68 bb       	out	0x18, r22	; 24
            break;
 336:	08 95       	ret
        case DIO_u8_PORTD:
            ASSIGN_PORT(PORTD, DIO_u8Val);
 338:	62 bb       	out	0x12, r22	; 18
 33a:	08 95       	ret

0000033c <LCD_SendData>:
void LCD_ScrollLeft(){
	LCD_SendCommand(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVELEFT);
}

void LCD_ScrollRight(){
	LCD_SendCommand(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVERIGHT);
 33c:	cf 93       	push	r28
 33e:	c8 2f       	mov	r28, r24
 340:	41 e0       	ldi	r20, 0x01	; 1
 342:	61 e0       	ldi	r22, 0x01	; 1
 344:	86 e0       	ldi	r24, 0x06	; 6
 346:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 34a:	40 e0       	ldi	r20, 0x00	; 0
 34c:	62 e0       	ldi	r22, 0x02	; 2
 34e:	86 e0       	ldi	r24, 0x06	; 6
 350:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 354:	6c 2f       	mov	r22, r28
 356:	60 7f       	andi	r22, 0xF0	; 240
 358:	85 e0       	ldi	r24, 0x05	; 5
 35a:	0e 94 8b 01 	call	0x316	; 0x316 <DIO_VoidSetPortValue>
 35e:	41 e0       	ldi	r20, 0x01	; 1
 360:	63 e0       	ldi	r22, 0x03	; 3
 362:	86 e0       	ldi	r24, 0x06	; 6
 364:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 368:	8f e9       	ldi	r24, 0x9F	; 159
 36a:	9f e0       	ldi	r25, 0x0F	; 15
 36c:	01 97       	sbiw	r24, 0x01	; 1
 36e:	f1 f7       	brne	.-4      	; 0x36c <LCD_SendData+0x30>
 370:	00 c0       	rjmp	.+0      	; 0x372 <LCD_SendData+0x36>
 372:	00 00       	nop
 374:	40 e0       	ldi	r20, 0x00	; 0
 376:	63 e0       	ldi	r22, 0x03	; 3
 378:	86 e0       	ldi	r24, 0x06	; 6
 37a:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 37e:	8f e9       	ldi	r24, 0x9F	; 159
 380:	9f e0       	ldi	r25, 0x0F	; 15
 382:	01 97       	sbiw	r24, 0x01	; 1
 384:	f1 f7       	brne	.-4      	; 0x382 <LCD_SendData+0x46>
 386:	00 c0       	rjmp	.+0      	; 0x388 <LCD_SendData+0x4c>
 388:	00 00       	nop
 38a:	6c 2f       	mov	r22, r28
 38c:	62 95       	swap	r22
 38e:	60 7f       	andi	r22, 0xF0	; 240
 390:	85 e0       	ldi	r24, 0x05	; 5
 392:	0e 94 8b 01 	call	0x316	; 0x316 <DIO_VoidSetPortValue>
 396:	41 e0       	ldi	r20, 0x01	; 1
 398:	63 e0       	ldi	r22, 0x03	; 3
 39a:	86 e0       	ldi	r24, 0x06	; 6
 39c:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 3a0:	8f e9       	ldi	r24, 0x9F	; 159
 3a2:	9f e0       	ldi	r25, 0x0F	; 15
 3a4:	01 97       	sbiw	r24, 0x01	; 1
 3a6:	f1 f7       	brne	.-4      	; 0x3a4 <LCD_SendData+0x68>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <LCD_SendData+0x6e>
 3aa:	00 00       	nop
 3ac:	40 e0       	ldi	r20, 0x00	; 0
 3ae:	63 e0       	ldi	r22, 0x03	; 3
 3b0:	86 e0       	ldi	r24, 0x06	; 6
 3b2:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 3b6:	8f e9       	ldi	r24, 0x9F	; 159
 3b8:	9f e0       	ldi	r25, 0x0F	; 15
 3ba:	01 97       	sbiw	r24, 0x01	; 1
 3bc:	f1 f7       	brne	.-4      	; 0x3ba <LCD_SendData+0x7e>
 3be:	00 c0       	rjmp	.+0      	; 0x3c0 <LCD_SendData+0x84>
 3c0:	00 00       	nop
 3c2:	cf 91       	pop	r28
 3c4:	08 95       	ret

000003c6 <LCD_SendCommand>:
 3c6:	cf 93       	push	r28
 3c8:	c8 2f       	mov	r28, r24
 3ca:	40 e0       	ldi	r20, 0x00	; 0
 3cc:	61 e0       	ldi	r22, 0x01	; 1
 3ce:	86 e0       	ldi	r24, 0x06	; 6
 3d0:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 3d4:	40 e0       	ldi	r20, 0x00	; 0
 3d6:	62 e0       	ldi	r22, 0x02	; 2
 3d8:	86 e0       	ldi	r24, 0x06	; 6
 3da:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 3de:	6c 2f       	mov	r22, r28
 3e0:	60 7f       	andi	r22, 0xF0	; 240
 3e2:	85 e0       	ldi	r24, 0x05	; 5
 3e4:	0e 94 8b 01 	call	0x316	; 0x316 <DIO_VoidSetPortValue>
 3e8:	41 e0       	ldi	r20, 0x01	; 1
 3ea:	63 e0       	ldi	r22, 0x03	; 3
 3ec:	86 e0       	ldi	r24, 0x06	; 6
 3ee:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 3f2:	8f e9       	ldi	r24, 0x9F	; 159
 3f4:	9f e0       	ldi	r25, 0x0F	; 15
 3f6:	01 97       	sbiw	r24, 0x01	; 1
 3f8:	f1 f7       	brne	.-4      	; 0x3f6 <LCD_SendCommand+0x30>
 3fa:	00 c0       	rjmp	.+0      	; 0x3fc <LCD_SendCommand+0x36>
 3fc:	00 00       	nop
 3fe:	40 e0       	ldi	r20, 0x00	; 0
 400:	63 e0       	ldi	r22, 0x03	; 3
 402:	86 e0       	ldi	r24, 0x06	; 6
 404:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 408:	8f e9       	ldi	r24, 0x9F	; 159
 40a:	9f e0       	ldi	r25, 0x0F	; 15
 40c:	01 97       	sbiw	r24, 0x01	; 1
 40e:	f1 f7       	brne	.-4      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 410:	00 c0       	rjmp	.+0      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 412:	00 00       	nop
 414:	6c 2f       	mov	r22, r28
 416:	62 95       	swap	r22
 418:	60 7f       	andi	r22, 0xF0	; 240
 41a:	85 e0       	ldi	r24, 0x05	; 5
 41c:	0e 94 8b 01 	call	0x316	; 0x316 <DIO_VoidSetPortValue>
 420:	41 e0       	ldi	r20, 0x01	; 1
 422:	63 e0       	ldi	r22, 0x03	; 3
 424:	86 e0       	ldi	r24, 0x06	; 6
 426:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 42a:	8f e9       	ldi	r24, 0x9F	; 159
 42c:	9f e0       	ldi	r25, 0x0F	; 15
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 432:	00 c0       	rjmp	.+0      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 434:	00 00       	nop
 436:	40 e0       	ldi	r20, 0x00	; 0
 438:	63 e0       	ldi	r22, 0x03	; 3
 43a:	86 e0       	ldi	r24, 0x06	; 6
 43c:	0e 94 13 01 	call	0x226	; 0x226 <DIO_VoidSetPinValue>
 440:	8f e9       	ldi	r24, 0x9F	; 159
 442:	9f e0       	ldi	r25, 0x0F	; 15
 444:	01 97       	sbiw	r24, 0x01	; 1
 446:	f1 f7       	brne	.-4      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 448:	00 c0       	rjmp	.+0      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 44a:	00 00       	nop
 44c:	cf 91       	pop	r28
 44e:	08 95       	ret

00000450 <LCD_Init>:
 450:	2f e7       	ldi	r18, 0x7F	; 127
 452:	85 eb       	ldi	r24, 0xB5	; 181
 454:	91 e0       	ldi	r25, 0x01	; 1
 456:	21 50       	subi	r18, 0x01	; 1
 458:	80 40       	sbci	r24, 0x00	; 0
 45a:	90 40       	sbci	r25, 0x00	; 0
 45c:	e1 f7       	brne	.-8      	; 0x456 <LCD_Init+0x6>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <LCD_Init+0x10>
 460:	00 00       	nop
 462:	83 e3       	ldi	r24, 0x33	; 51
 464:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <LCD_SendCommand>
 468:	82 e3       	ldi	r24, 0x32	; 50
 46a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <LCD_SendCommand>
 46e:	88 e2       	ldi	r24, 0x28	; 40
 470:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <LCD_SendCommand>
 474:	8f e9       	ldi	r24, 0x9F	; 159
 476:	9f e0       	ldi	r25, 0x0F	; 15
 478:	01 97       	sbiw	r24, 0x01	; 1
 47a:	f1 f7       	brne	.-4      	; 0x478 <LCD_Init+0x28>
 47c:	00 c0       	rjmp	.+0      	; 0x47e <LCD_Init+0x2e>
 47e:	00 00       	nop
 480:	8c e0       	ldi	r24, 0x0C	; 12
 482:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <LCD_SendCommand>
 486:	8f e9       	ldi	r24, 0x9F	; 159
 488:	9f e0       	ldi	r25, 0x0F	; 15
 48a:	01 97       	sbiw	r24, 0x01	; 1
 48c:	f1 f7       	brne	.-4      	; 0x48a <LCD_Init+0x3a>
 48e:	00 c0       	rjmp	.+0      	; 0x490 <LCD_Init+0x40>
 490:	00 00       	nop
 492:	81 e0       	ldi	r24, 0x01	; 1
 494:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <LCD_SendCommand>
 498:	8f e3       	ldi	r24, 0x3F	; 63
 49a:	9f e1       	ldi	r25, 0x1F	; 31
 49c:	01 97       	sbiw	r24, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <LCD_Init+0x4c>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <LCD_Init+0x52>
 4a2:	00 00       	nop
 4a4:	86 e0       	ldi	r24, 0x06	; 6
 4a6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <LCD_SendCommand>
 4aa:	08 95       	ret

000004ac <LCD_CursorSet>:
	LCD_CursorSet(x, y);
	LCD_SendData(location);
}


void LCD_CursorSet(u8 col, u8 row){
 4ac:	cf 93       	push	r28
 4ae:	df 93       	push	r29
 4b0:	00 d0       	rcall	.+0      	; 0x4b2 <LCD_CursorSet+0x6>
 4b2:	00 d0       	rcall	.+0      	; 0x4b4 <LCD_CursorSet+0x8>
 4b4:	cd b7       	in	r28, 0x3d	; 61
 4b6:	de b7       	in	r29, 0x3e	; 62
	u8 row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 4b8:	19 82       	std	Y+1, r1	; 0x01
 4ba:	90 e4       	ldi	r25, 0x40	; 64
 4bc:	9a 83       	std	Y+2, r25	; 0x02
 4be:	94 e1       	ldi	r25, 0x14	; 20
 4c0:	9b 83       	std	Y+3, r25	; 0x03
 4c2:	94 e5       	ldi	r25, 0x54	; 84
 4c4:	9c 83       	std	Y+4, r25	; 0x04
		if ( row >= _LCD_ROWS)
 4c6:	62 30       	cpi	r22, 0x02	; 2
 4c8:	08 f0       	brcs	.+2      	; 0x4cc <LCD_CursorSet+0x20>
			{row = 0;} 
 4ca:	60 e0       	ldi	r22, 0x00	; 0
	LCD_Opts.currentX = col;  
 4cc:	e6 e6       	ldi	r30, 0x66	; 102
 4ce:	f0 e0       	ldi	r31, 0x00	; 0
 4d0:	83 83       	std	Z+3, r24	; 0x03
	LCD_Opts.currentY = row;
 4d2:	64 83       	std	Z+4, r22	; 0x04
	LCD_SendCommand(LCD_SETDDRAMADDR | (col + row_offsets[row]));
 4d4:	e1 e0       	ldi	r30, 0x01	; 1
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	ec 0f       	add	r30, r28
 4da:	fd 1f       	adc	r31, r29
 4dc:	e6 0f       	add	r30, r22
 4de:	f1 1d       	adc	r31, r1
 4e0:	90 81       	ld	r25, Z
 4e2:	89 0f       	add	r24, r25
 4e4:	80 68       	ori	r24, 0x80	; 128
 4e6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <LCD_SendCommand>
}
 4ea:	0f 90       	pop	r0
 4ec:	0f 90       	pop	r0
 4ee:	0f 90       	pop	r0
 4f0:	0f 90       	pop	r0
 4f2:	df 91       	pop	r29
 4f4:	cf 91       	pop	r28
 4f6:	08 95       	ret

000004f8 <LCD_Puts>:
void LCD_Clear(void){
    LCD_SendCommand(LCD_CLEARDISPLAY);
	_delay_ms(5);
}

void LCD_Puts(u8 x, u8 y, char* str){
 4f8:	cf 93       	push	r28
 4fa:	df 93       	push	r29
 4fc:	ea 01       	movw	r28, r20
	LCD_CursorSet(x, y);
 4fe:	0e 94 56 02 	call	0x4ac	; 0x4ac <LCD_CursorSet>
	while (*str){
 502:	29 c0       	rjmp	.+82     	; 0x556 <LCD_Puts+0x5e>
		if(LCD_Opts.currentX >= _LCD_COLS){
 504:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__data_end+0x3>
 508:	80 31       	cpi	r24, 0x10	; 16
 50a:	48 f0       	brcs	.+18     	; 0x51e <LCD_Puts+0x26>
			LCD_Opts.currentX = 0;
 50c:	e6 e6       	ldi	r30, 0x66	; 102
 50e:	f0 e0       	ldi	r31, 0x00	; 0
 510:	13 82       	std	Z+3, r1	; 0x03
			LCD_Opts.currentY++;
 512:	64 81       	ldd	r22, Z+4	; 0x04
 514:	6f 5f       	subi	r22, 0xFF	; 255
 516:	64 83       	std	Z+4, r22	; 0x04
			LCD_CursorSet(LCD_Opts.currentX, LCD_Opts.currentY);
 518:	80 e0       	ldi	r24, 0x00	; 0
 51a:	0e 94 56 02 	call	0x4ac	; 0x4ac <LCD_CursorSet>
		}
		
		if(*str == '\n'){
 51e:	88 81       	ld	r24, Y
 520:	8a 30       	cpi	r24, 0x0A	; 10
 522:	49 f4       	brne	.+18     	; 0x536 <LCD_Puts+0x3e>
			LCD_Opts.currentY++;
 524:	e6 e6       	ldi	r30, 0x66	; 102
 526:	f0 e0       	ldi	r31, 0x00	; 0
 528:	64 81       	ldd	r22, Z+4	; 0x04
 52a:	6f 5f       	subi	r22, 0xFF	; 255
 52c:	64 83       	std	Z+4, r22	; 0x04
			LCD_CursorSet(LCD_Opts.currentX, LCD_Opts.currentY);
 52e:	83 81       	ldd	r24, Z+3	; 0x03
 530:	0e 94 56 02 	call	0x4ac	; 0x4ac <LCD_CursorSet>
 534:	0f c0       	rjmp	.+30     	; 0x554 <LCD_Puts+0x5c>
		}else if ( *str == '\r'){
 536:	8d 30       	cpi	r24, 0x0D	; 13
 538:	31 f4       	brne	.+12     	; 0x546 <LCD_Puts+0x4e>
			LCD_CursorSet(0, LCD_Opts.currentY);
 53a:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <__data_end+0x4>
 53e:	80 e0       	ldi	r24, 0x00	; 0
 540:	0e 94 56 02 	call	0x4ac	; 0x4ac <LCD_CursorSet>
 544:	07 c0       	rjmp	.+14     	; 0x554 <LCD_Puts+0x5c>
		}else{
			LCD_SendData(*str);
 546:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_SendData>
			LCD_Opts.currentX++;
 54a:	e6 e6       	ldi	r30, 0x66	; 102
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	83 81       	ldd	r24, Z+3	; 0x03
 550:	8f 5f       	subi	r24, 0xFF	; 255
 552:	83 83       	std	Z+3, r24	; 0x03
		}
		str++;
 554:	21 96       	adiw	r28, 0x01	; 1
	_delay_ms(5);
}

void LCD_Puts(u8 x, u8 y, char* str){
	LCD_CursorSet(x, y);
	while (*str){
 556:	88 81       	ld	r24, Y
 558:	81 11       	cpse	r24, r1
 55a:	d4 cf       	rjmp	.-88     	; 0x504 <LCD_Puts+0xc>
			LCD_SendData(*str);
			LCD_Opts.currentX++;
		}
		str++;
	}
}
 55c:	df 91       	pop	r29
 55e:	cf 91       	pop	r28
 560:	08 95       	ret

00000562 <main>:
#include "LCD_interface.h"
#include <stdlib.h>
#include <util/delay.h>

int main(void)
{
 562:	cf 93       	push	r28
 564:	df 93       	push	r29
 566:	cd b7       	in	r28, 0x3d	; 61
 568:	de b7       	in	r29, 0x3e	; 62
 56a:	2a 97       	sbiw	r28, 0x0a	; 10
 56c:	0f b6       	in	r0, 0x3f	; 63
 56e:	f8 94       	cli
 570:	de bf       	out	0x3e, r29	; 62
 572:	0f be       	out	0x3f, r0	; 63
 574:	cd bf       	out	0x3d, r28	; 61
   DIO_VoidInit();
 576:	0e 94 0c 01 	call	0x218	; 0x218 <DIO_VoidInit>
   LCD_Init();
 57a:	0e 94 28 02 	call	0x450	; 0x450 <LCD_Init>
   ADC_init();
 57e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <ADC_init>
   f32 analog;
   char str[10];
   u8 count=0;
    while (1) 
    {
		digital = ADC_analogRead10Bit(1);
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <ADC_analogRead10Bit>
		analog = (digital*5.0) /1024.0;
 58a:	bc 01       	movw	r22, r24
 58c:	80 e0       	ldi	r24, 0x00	; 0
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__floatunsisf>
 594:	20 e0       	ldi	r18, 0x00	; 0
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	40 ea       	ldi	r20, 0xA0	; 160
 59a:	50 e4       	ldi	r21, 0x40	; 64
 59c:	0e 94 2f 03 	call	0x65e	; 0x65e <__mulsf3>
 5a0:	20 e0       	ldi	r18, 0x00	; 0
 5a2:	30 e0       	ldi	r19, 0x00	; 0
 5a4:	40 e8       	ldi	r20, 0x80	; 128
 5a6:	5a e3       	ldi	r21, 0x3A	; 58
 5a8:	0e 94 2f 03 	call	0x65e	; 0x65e <__mulsf3>
		dtostrf(analog, 2,5, str);
 5ac:	8e 01       	movw	r16, r28
 5ae:	0f 5f       	subi	r16, 0xFF	; 255
 5b0:	1f 4f       	sbci	r17, 0xFF	; 255
 5b2:	25 e0       	ldi	r18, 0x05	; 5
 5b4:	42 e0       	ldi	r20, 0x02	; 2
 5b6:	0e 94 ed 03 	call	0x7da	; 0x7da <dtostrf>
		LCD_Puts(0,0, str);
 5ba:	a8 01       	movw	r20, r16
 5bc:	60 e0       	ldi	r22, 0x00	; 0
 5be:	80 e0       	ldi	r24, 0x00	; 0
 5c0:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <LCD_Puts>
		LCD_Puts(8,0, "Volts");
 5c4:	40 e6       	ldi	r20, 0x60	; 96
 5c6:	50 e0       	ldi	r21, 0x00	; 0
 5c8:	60 e0       	ldi	r22, 0x00	; 0
 5ca:	88 e0       	ldi	r24, 0x08	; 8
 5cc:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <LCD_Puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5d0:	2f ef       	ldi	r18, 0xFF	; 255
 5d2:	89 ef       	ldi	r24, 0xF9	; 249
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	21 50       	subi	r18, 0x01	; 1
 5d8:	80 40       	sbci	r24, 0x00	; 0
 5da:	90 40       	sbci	r25, 0x00	; 0
 5dc:	e1 f7       	brne	.-8      	; 0x5d6 <main+0x74>
 5de:	00 c0       	rjmp	.+0      	; 0x5e0 <main+0x7e>
 5e0:	00 00       	nop
 5e2:	cf cf       	rjmp	.-98     	; 0x582 <main+0x20>

000005e4 <__floatunsisf>:
 5e4:	e8 94       	clt
 5e6:	09 c0       	rjmp	.+18     	; 0x5fa <__floatsisf+0x12>

000005e8 <__floatsisf>:
 5e8:	97 fb       	bst	r25, 7
 5ea:	3e f4       	brtc	.+14     	; 0x5fa <__floatsisf+0x12>
 5ec:	90 95       	com	r25
 5ee:	80 95       	com	r24
 5f0:	70 95       	com	r23
 5f2:	61 95       	neg	r22
 5f4:	7f 4f       	sbci	r23, 0xFF	; 255
 5f6:	8f 4f       	sbci	r24, 0xFF	; 255
 5f8:	9f 4f       	sbci	r25, 0xFF	; 255
 5fa:	99 23       	and	r25, r25
 5fc:	a9 f0       	breq	.+42     	; 0x628 <__floatsisf+0x40>
 5fe:	f9 2f       	mov	r31, r25
 600:	96 e9       	ldi	r25, 0x96	; 150
 602:	bb 27       	eor	r27, r27
 604:	93 95       	inc	r25
 606:	f6 95       	lsr	r31
 608:	87 95       	ror	r24
 60a:	77 95       	ror	r23
 60c:	67 95       	ror	r22
 60e:	b7 95       	ror	r27
 610:	f1 11       	cpse	r31, r1
 612:	f8 cf       	rjmp	.-16     	; 0x604 <__floatsisf+0x1c>
 614:	fa f4       	brpl	.+62     	; 0x654 <__floatsisf+0x6c>
 616:	bb 0f       	add	r27, r27
 618:	11 f4       	brne	.+4      	; 0x61e <__floatsisf+0x36>
 61a:	60 ff       	sbrs	r22, 0
 61c:	1b c0       	rjmp	.+54     	; 0x654 <__floatsisf+0x6c>
 61e:	6f 5f       	subi	r22, 0xFF	; 255
 620:	7f 4f       	sbci	r23, 0xFF	; 255
 622:	8f 4f       	sbci	r24, 0xFF	; 255
 624:	9f 4f       	sbci	r25, 0xFF	; 255
 626:	16 c0       	rjmp	.+44     	; 0x654 <__floatsisf+0x6c>
 628:	88 23       	and	r24, r24
 62a:	11 f0       	breq	.+4      	; 0x630 <__floatsisf+0x48>
 62c:	96 e9       	ldi	r25, 0x96	; 150
 62e:	11 c0       	rjmp	.+34     	; 0x652 <__floatsisf+0x6a>
 630:	77 23       	and	r23, r23
 632:	21 f0       	breq	.+8      	; 0x63c <__floatsisf+0x54>
 634:	9e e8       	ldi	r25, 0x8E	; 142
 636:	87 2f       	mov	r24, r23
 638:	76 2f       	mov	r23, r22
 63a:	05 c0       	rjmp	.+10     	; 0x646 <__floatsisf+0x5e>
 63c:	66 23       	and	r22, r22
 63e:	71 f0       	breq	.+28     	; 0x65c <__floatsisf+0x74>
 640:	96 e8       	ldi	r25, 0x86	; 134
 642:	86 2f       	mov	r24, r22
 644:	70 e0       	ldi	r23, 0x00	; 0
 646:	60 e0       	ldi	r22, 0x00	; 0
 648:	2a f0       	brmi	.+10     	; 0x654 <__floatsisf+0x6c>
 64a:	9a 95       	dec	r25
 64c:	66 0f       	add	r22, r22
 64e:	77 1f       	adc	r23, r23
 650:	88 1f       	adc	r24, r24
 652:	da f7       	brpl	.-10     	; 0x64a <__floatsisf+0x62>
 654:	88 0f       	add	r24, r24
 656:	96 95       	lsr	r25
 658:	87 95       	ror	r24
 65a:	97 f9       	bld	r25, 7
 65c:	08 95       	ret

0000065e <__mulsf3>:
 65e:	0e 94 42 03 	call	0x684	; 0x684 <__mulsf3x>
 662:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_round>
 666:	0e 94 a5 03 	call	0x74a	; 0x74a <__fp_pscA>
 66a:	38 f0       	brcs	.+14     	; 0x67a <__mulsf3+0x1c>
 66c:	0e 94 ac 03 	call	0x758	; 0x758 <__fp_pscB>
 670:	20 f0       	brcs	.+8      	; 0x67a <__mulsf3+0x1c>
 672:	95 23       	and	r25, r21
 674:	11 f0       	breq	.+4      	; 0x67a <__mulsf3+0x1c>
 676:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_inf>
 67a:	0c 94 a2 03 	jmp	0x744	; 0x744 <__fp_nan>
 67e:	11 24       	eor	r1, r1
 680:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_szero>

00000684 <__mulsf3x>:
 684:	0e 94 c4 03 	call	0x788	; 0x788 <__fp_split3>
 688:	70 f3       	brcs	.-36     	; 0x666 <__mulsf3+0x8>

0000068a <__mulsf3_pse>:
 68a:	95 9f       	mul	r25, r21
 68c:	c1 f3       	breq	.-16     	; 0x67e <__mulsf3+0x20>
 68e:	95 0f       	add	r25, r21
 690:	50 e0       	ldi	r21, 0x00	; 0
 692:	55 1f       	adc	r21, r21
 694:	62 9f       	mul	r22, r18
 696:	f0 01       	movw	r30, r0
 698:	72 9f       	mul	r23, r18
 69a:	bb 27       	eor	r27, r27
 69c:	f0 0d       	add	r31, r0
 69e:	b1 1d       	adc	r27, r1
 6a0:	63 9f       	mul	r22, r19
 6a2:	aa 27       	eor	r26, r26
 6a4:	f0 0d       	add	r31, r0
 6a6:	b1 1d       	adc	r27, r1
 6a8:	aa 1f       	adc	r26, r26
 6aa:	64 9f       	mul	r22, r20
 6ac:	66 27       	eor	r22, r22
 6ae:	b0 0d       	add	r27, r0
 6b0:	a1 1d       	adc	r26, r1
 6b2:	66 1f       	adc	r22, r22
 6b4:	82 9f       	mul	r24, r18
 6b6:	22 27       	eor	r18, r18
 6b8:	b0 0d       	add	r27, r0
 6ba:	a1 1d       	adc	r26, r1
 6bc:	62 1f       	adc	r22, r18
 6be:	73 9f       	mul	r23, r19
 6c0:	b0 0d       	add	r27, r0
 6c2:	a1 1d       	adc	r26, r1
 6c4:	62 1f       	adc	r22, r18
 6c6:	83 9f       	mul	r24, r19
 6c8:	a0 0d       	add	r26, r0
 6ca:	61 1d       	adc	r22, r1
 6cc:	22 1f       	adc	r18, r18
 6ce:	74 9f       	mul	r23, r20
 6d0:	33 27       	eor	r19, r19
 6d2:	a0 0d       	add	r26, r0
 6d4:	61 1d       	adc	r22, r1
 6d6:	23 1f       	adc	r18, r19
 6d8:	84 9f       	mul	r24, r20
 6da:	60 0d       	add	r22, r0
 6dc:	21 1d       	adc	r18, r1
 6de:	82 2f       	mov	r24, r18
 6e0:	76 2f       	mov	r23, r22
 6e2:	6a 2f       	mov	r22, r26
 6e4:	11 24       	eor	r1, r1
 6e6:	9f 57       	subi	r25, 0x7F	; 127
 6e8:	50 40       	sbci	r21, 0x00	; 0
 6ea:	9a f0       	brmi	.+38     	; 0x712 <__mulsf3_pse+0x88>
 6ec:	f1 f0       	breq	.+60     	; 0x72a <__mulsf3_pse+0xa0>
 6ee:	88 23       	and	r24, r24
 6f0:	4a f0       	brmi	.+18     	; 0x704 <__mulsf3_pse+0x7a>
 6f2:	ee 0f       	add	r30, r30
 6f4:	ff 1f       	adc	r31, r31
 6f6:	bb 1f       	adc	r27, r27
 6f8:	66 1f       	adc	r22, r22
 6fa:	77 1f       	adc	r23, r23
 6fc:	88 1f       	adc	r24, r24
 6fe:	91 50       	subi	r25, 0x01	; 1
 700:	50 40       	sbci	r21, 0x00	; 0
 702:	a9 f7       	brne	.-22     	; 0x6ee <__mulsf3_pse+0x64>
 704:	9e 3f       	cpi	r25, 0xFE	; 254
 706:	51 05       	cpc	r21, r1
 708:	80 f0       	brcs	.+32     	; 0x72a <__mulsf3_pse+0xa0>
 70a:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_inf>
 70e:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_szero>
 712:	5f 3f       	cpi	r21, 0xFF	; 255
 714:	e4 f3       	brlt	.-8      	; 0x70e <__mulsf3_pse+0x84>
 716:	98 3e       	cpi	r25, 0xE8	; 232
 718:	d4 f3       	brlt	.-12     	; 0x70e <__mulsf3_pse+0x84>
 71a:	86 95       	lsr	r24
 71c:	77 95       	ror	r23
 71e:	67 95       	ror	r22
 720:	b7 95       	ror	r27
 722:	f7 95       	ror	r31
 724:	e7 95       	ror	r30
 726:	9f 5f       	subi	r25, 0xFF	; 255
 728:	c1 f7       	brne	.-16     	; 0x71a <__mulsf3_pse+0x90>
 72a:	fe 2b       	or	r31, r30
 72c:	88 0f       	add	r24, r24
 72e:	91 1d       	adc	r25, r1
 730:	96 95       	lsr	r25
 732:	87 95       	ror	r24
 734:	97 f9       	bld	r25, 7
 736:	08 95       	ret

00000738 <__fp_inf>:
 738:	97 f9       	bld	r25, 7
 73a:	9f 67       	ori	r25, 0x7F	; 127
 73c:	80 e8       	ldi	r24, 0x80	; 128
 73e:	70 e0       	ldi	r23, 0x00	; 0
 740:	60 e0       	ldi	r22, 0x00	; 0
 742:	08 95       	ret

00000744 <__fp_nan>:
 744:	9f ef       	ldi	r25, 0xFF	; 255
 746:	80 ec       	ldi	r24, 0xC0	; 192
 748:	08 95       	ret

0000074a <__fp_pscA>:
 74a:	00 24       	eor	r0, r0
 74c:	0a 94       	dec	r0
 74e:	16 16       	cp	r1, r22
 750:	17 06       	cpc	r1, r23
 752:	18 06       	cpc	r1, r24
 754:	09 06       	cpc	r0, r25
 756:	08 95       	ret

00000758 <__fp_pscB>:
 758:	00 24       	eor	r0, r0
 75a:	0a 94       	dec	r0
 75c:	12 16       	cp	r1, r18
 75e:	13 06       	cpc	r1, r19
 760:	14 06       	cpc	r1, r20
 762:	05 06       	cpc	r0, r21
 764:	08 95       	ret

00000766 <__fp_round>:
 766:	09 2e       	mov	r0, r25
 768:	03 94       	inc	r0
 76a:	00 0c       	add	r0, r0
 76c:	11 f4       	brne	.+4      	; 0x772 <__fp_round+0xc>
 76e:	88 23       	and	r24, r24
 770:	52 f0       	brmi	.+20     	; 0x786 <__fp_round+0x20>
 772:	bb 0f       	add	r27, r27
 774:	40 f4       	brcc	.+16     	; 0x786 <__fp_round+0x20>
 776:	bf 2b       	or	r27, r31
 778:	11 f4       	brne	.+4      	; 0x77e <__fp_round+0x18>
 77a:	60 ff       	sbrs	r22, 0
 77c:	04 c0       	rjmp	.+8      	; 0x786 <__fp_round+0x20>
 77e:	6f 5f       	subi	r22, 0xFF	; 255
 780:	7f 4f       	sbci	r23, 0xFF	; 255
 782:	8f 4f       	sbci	r24, 0xFF	; 255
 784:	9f 4f       	sbci	r25, 0xFF	; 255
 786:	08 95       	ret

00000788 <__fp_split3>:
 788:	57 fd       	sbrc	r21, 7
 78a:	90 58       	subi	r25, 0x80	; 128
 78c:	44 0f       	add	r20, r20
 78e:	55 1f       	adc	r21, r21
 790:	59 f0       	breq	.+22     	; 0x7a8 <__fp_splitA+0x10>
 792:	5f 3f       	cpi	r21, 0xFF	; 255
 794:	71 f0       	breq	.+28     	; 0x7b2 <__fp_splitA+0x1a>
 796:	47 95       	ror	r20

00000798 <__fp_splitA>:
 798:	88 0f       	add	r24, r24
 79a:	97 fb       	bst	r25, 7
 79c:	99 1f       	adc	r25, r25
 79e:	61 f0       	breq	.+24     	; 0x7b8 <__fp_splitA+0x20>
 7a0:	9f 3f       	cpi	r25, 0xFF	; 255
 7a2:	79 f0       	breq	.+30     	; 0x7c2 <__fp_splitA+0x2a>
 7a4:	87 95       	ror	r24
 7a6:	08 95       	ret
 7a8:	12 16       	cp	r1, r18
 7aa:	13 06       	cpc	r1, r19
 7ac:	14 06       	cpc	r1, r20
 7ae:	55 1f       	adc	r21, r21
 7b0:	f2 cf       	rjmp	.-28     	; 0x796 <__fp_split3+0xe>
 7b2:	46 95       	lsr	r20
 7b4:	f1 df       	rcall	.-30     	; 0x798 <__fp_splitA>
 7b6:	08 c0       	rjmp	.+16     	; 0x7c8 <__fp_splitA+0x30>
 7b8:	16 16       	cp	r1, r22
 7ba:	17 06       	cpc	r1, r23
 7bc:	18 06       	cpc	r1, r24
 7be:	99 1f       	adc	r25, r25
 7c0:	f1 cf       	rjmp	.-30     	; 0x7a4 <__fp_splitA+0xc>
 7c2:	86 95       	lsr	r24
 7c4:	71 05       	cpc	r23, r1
 7c6:	61 05       	cpc	r22, r1
 7c8:	08 94       	sec
 7ca:	08 95       	ret

000007cc <__fp_zero>:
 7cc:	e8 94       	clt

000007ce <__fp_szero>:
 7ce:	bb 27       	eor	r27, r27
 7d0:	66 27       	eor	r22, r22
 7d2:	77 27       	eor	r23, r23
 7d4:	cb 01       	movw	r24, r22
 7d6:	97 f9       	bld	r25, 7
 7d8:	08 95       	ret

000007da <dtostrf>:
 7da:	ef 92       	push	r14
 7dc:	0f 93       	push	r16
 7de:	1f 93       	push	r17
 7e0:	cf 93       	push	r28
 7e2:	df 93       	push	r29
 7e4:	e8 01       	movw	r28, r16
 7e6:	47 fd       	sbrc	r20, 7
 7e8:	02 c0       	rjmp	.+4      	; 0x7ee <dtostrf+0x14>
 7ea:	34 e0       	ldi	r19, 0x04	; 4
 7ec:	01 c0       	rjmp	.+2      	; 0x7f0 <dtostrf+0x16>
 7ee:	34 e1       	ldi	r19, 0x14	; 20
 7f0:	04 2e       	mov	r0, r20
 7f2:	00 0c       	add	r0, r0
 7f4:	55 0b       	sbc	r21, r21
 7f6:	57 ff       	sbrs	r21, 7
 7f8:	03 c0       	rjmp	.+6      	; 0x800 <__DATA_REGION_LENGTH__>
 7fa:	51 95       	neg	r21
 7fc:	41 95       	neg	r20
 7fe:	51 09       	sbc	r21, r1
 800:	e3 2e       	mov	r14, r19
 802:	02 2f       	mov	r16, r18
 804:	24 2f       	mov	r18, r20
 806:	ae 01       	movw	r20, r28
 808:	0e 94 0d 04 	call	0x81a	; 0x81a <dtoa_prf>
 80c:	ce 01       	movw	r24, r28
 80e:	df 91       	pop	r29
 810:	cf 91       	pop	r28
 812:	1f 91       	pop	r17
 814:	0f 91       	pop	r16
 816:	ef 90       	pop	r14
 818:	08 95       	ret

0000081a <dtoa_prf>:
 81a:	a9 e0       	ldi	r26, 0x09	; 9
 81c:	b0 e0       	ldi	r27, 0x00	; 0
 81e:	e3 e1       	ldi	r30, 0x13	; 19
 820:	f4 e0       	ldi	r31, 0x04	; 4
 822:	0c 94 45 06 	jmp	0xc8a	; 0xc8a <__prologue_saves__+0xc>
 826:	6a 01       	movw	r12, r20
 828:	12 2f       	mov	r17, r18
 82a:	b0 2e       	mov	r11, r16
 82c:	2b e3       	ldi	r18, 0x3B	; 59
 82e:	20 17       	cp	r18, r16
 830:	20 f0       	brcs	.+8      	; 0x83a <dtoa_prf+0x20>
 832:	ff 24       	eor	r15, r15
 834:	f3 94       	inc	r15
 836:	f0 0e       	add	r15, r16
 838:	02 c0       	rjmp	.+4      	; 0x83e <dtoa_prf+0x24>
 83a:	2c e3       	ldi	r18, 0x3C	; 60
 83c:	f2 2e       	mov	r15, r18
 83e:	0f 2d       	mov	r16, r15
 840:	27 e0       	ldi	r18, 0x07	; 7
 842:	ae 01       	movw	r20, r28
 844:	4f 5f       	subi	r20, 0xFF	; 255
 846:	5f 4f       	sbci	r21, 0xFF	; 255
 848:	0e 94 67 05 	call	0xace	; 0xace <__ftoa_engine>
 84c:	bc 01       	movw	r22, r24
 84e:	49 81       	ldd	r20, Y+1	; 0x01
 850:	84 2f       	mov	r24, r20
 852:	89 70       	andi	r24, 0x09	; 9
 854:	81 30       	cpi	r24, 0x01	; 1
 856:	31 f0       	breq	.+12     	; 0x864 <__stack+0x5>
 858:	e1 fc       	sbrc	r14, 1
 85a:	06 c0       	rjmp	.+12     	; 0x868 <__stack+0x9>
 85c:	e0 fe       	sbrs	r14, 0
 85e:	06 c0       	rjmp	.+12     	; 0x86c <__stack+0xd>
 860:	90 e2       	ldi	r25, 0x20	; 32
 862:	05 c0       	rjmp	.+10     	; 0x86e <__stack+0xf>
 864:	9d e2       	ldi	r25, 0x2D	; 45
 866:	03 c0       	rjmp	.+6      	; 0x86e <__stack+0xf>
 868:	9b e2       	ldi	r25, 0x2B	; 43
 86a:	01 c0       	rjmp	.+2      	; 0x86e <__stack+0xf>
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	5e 2d       	mov	r21, r14
 870:	50 71       	andi	r21, 0x10	; 16
 872:	43 ff       	sbrs	r20, 3
 874:	3c c0       	rjmp	.+120    	; 0x8ee <__stack+0x8f>
 876:	91 11       	cpse	r25, r1
 878:	02 c0       	rjmp	.+4      	; 0x87e <__stack+0x1f>
 87a:	83 e0       	ldi	r24, 0x03	; 3
 87c:	01 c0       	rjmp	.+2      	; 0x880 <__stack+0x21>
 87e:	84 e0       	ldi	r24, 0x04	; 4
 880:	81 17       	cp	r24, r17
 882:	18 f4       	brcc	.+6      	; 0x88a <__stack+0x2b>
 884:	21 2f       	mov	r18, r17
 886:	28 1b       	sub	r18, r24
 888:	01 c0       	rjmp	.+2      	; 0x88c <__stack+0x2d>
 88a:	20 e0       	ldi	r18, 0x00	; 0
 88c:	51 11       	cpse	r21, r1
 88e:	0b c0       	rjmp	.+22     	; 0x8a6 <__stack+0x47>
 890:	f6 01       	movw	r30, r12
 892:	82 2f       	mov	r24, r18
 894:	30 e2       	ldi	r19, 0x20	; 32
 896:	88 23       	and	r24, r24
 898:	19 f0       	breq	.+6      	; 0x8a0 <__stack+0x41>
 89a:	31 93       	st	Z+, r19
 89c:	81 50       	subi	r24, 0x01	; 1
 89e:	fb cf       	rjmp	.-10     	; 0x896 <__stack+0x37>
 8a0:	c2 0e       	add	r12, r18
 8a2:	d1 1c       	adc	r13, r1
 8a4:	20 e0       	ldi	r18, 0x00	; 0
 8a6:	99 23       	and	r25, r25
 8a8:	29 f0       	breq	.+10     	; 0x8b4 <__stack+0x55>
 8aa:	d6 01       	movw	r26, r12
 8ac:	9c 93       	st	X, r25
 8ae:	f6 01       	movw	r30, r12
 8b0:	31 96       	adiw	r30, 0x01	; 1
 8b2:	6f 01       	movw	r12, r30
 8b4:	c6 01       	movw	r24, r12
 8b6:	03 96       	adiw	r24, 0x03	; 3
 8b8:	e2 fe       	sbrs	r14, 2
 8ba:	0a c0       	rjmp	.+20     	; 0x8d0 <__stack+0x71>
 8bc:	3e e4       	ldi	r19, 0x4E	; 78
 8be:	d6 01       	movw	r26, r12
 8c0:	3c 93       	st	X, r19
 8c2:	41 e4       	ldi	r20, 0x41	; 65
 8c4:	11 96       	adiw	r26, 0x01	; 1
 8c6:	4c 93       	st	X, r20
 8c8:	11 97       	sbiw	r26, 0x01	; 1
 8ca:	12 96       	adiw	r26, 0x02	; 2
 8cc:	3c 93       	st	X, r19
 8ce:	06 c0       	rjmp	.+12     	; 0x8dc <__stack+0x7d>
 8d0:	3e e6       	ldi	r19, 0x6E	; 110
 8d2:	f6 01       	movw	r30, r12
 8d4:	30 83       	st	Z, r19
 8d6:	41 e6       	ldi	r20, 0x61	; 97
 8d8:	41 83       	std	Z+1, r20	; 0x01
 8da:	32 83       	std	Z+2, r19	; 0x02
 8dc:	fc 01       	movw	r30, r24
 8de:	32 2f       	mov	r19, r18
 8e0:	40 e2       	ldi	r20, 0x20	; 32
 8e2:	33 23       	and	r19, r19
 8e4:	09 f4       	brne	.+2      	; 0x8e8 <__stack+0x89>
 8e6:	42 c0       	rjmp	.+132    	; 0x96c <__stack+0x10d>
 8e8:	41 93       	st	Z+, r20
 8ea:	31 50       	subi	r19, 0x01	; 1
 8ec:	fa cf       	rjmp	.-12     	; 0x8e2 <__stack+0x83>
 8ee:	42 ff       	sbrs	r20, 2
 8f0:	44 c0       	rjmp	.+136    	; 0x97a <__stack+0x11b>
 8f2:	91 11       	cpse	r25, r1
 8f4:	02 c0       	rjmp	.+4      	; 0x8fa <__stack+0x9b>
 8f6:	83 e0       	ldi	r24, 0x03	; 3
 8f8:	01 c0       	rjmp	.+2      	; 0x8fc <__stack+0x9d>
 8fa:	84 e0       	ldi	r24, 0x04	; 4
 8fc:	81 17       	cp	r24, r17
 8fe:	18 f4       	brcc	.+6      	; 0x906 <__stack+0xa7>
 900:	21 2f       	mov	r18, r17
 902:	28 1b       	sub	r18, r24
 904:	01 c0       	rjmp	.+2      	; 0x908 <__stack+0xa9>
 906:	20 e0       	ldi	r18, 0x00	; 0
 908:	51 11       	cpse	r21, r1
 90a:	0b c0       	rjmp	.+22     	; 0x922 <__stack+0xc3>
 90c:	f6 01       	movw	r30, r12
 90e:	82 2f       	mov	r24, r18
 910:	30 e2       	ldi	r19, 0x20	; 32
 912:	88 23       	and	r24, r24
 914:	19 f0       	breq	.+6      	; 0x91c <__stack+0xbd>
 916:	31 93       	st	Z+, r19
 918:	81 50       	subi	r24, 0x01	; 1
 91a:	fb cf       	rjmp	.-10     	; 0x912 <__stack+0xb3>
 91c:	c2 0e       	add	r12, r18
 91e:	d1 1c       	adc	r13, r1
 920:	20 e0       	ldi	r18, 0x00	; 0
 922:	99 23       	and	r25, r25
 924:	29 f0       	breq	.+10     	; 0x930 <__stack+0xd1>
 926:	d6 01       	movw	r26, r12
 928:	9c 93       	st	X, r25
 92a:	f6 01       	movw	r30, r12
 92c:	31 96       	adiw	r30, 0x01	; 1
 92e:	6f 01       	movw	r12, r30
 930:	c6 01       	movw	r24, r12
 932:	03 96       	adiw	r24, 0x03	; 3
 934:	e2 fe       	sbrs	r14, 2
 936:	0b c0       	rjmp	.+22     	; 0x94e <__stack+0xef>
 938:	39 e4       	ldi	r19, 0x49	; 73
 93a:	d6 01       	movw	r26, r12
 93c:	3c 93       	st	X, r19
 93e:	3e e4       	ldi	r19, 0x4E	; 78
 940:	11 96       	adiw	r26, 0x01	; 1
 942:	3c 93       	st	X, r19
 944:	11 97       	sbiw	r26, 0x01	; 1
 946:	36 e4       	ldi	r19, 0x46	; 70
 948:	12 96       	adiw	r26, 0x02	; 2
 94a:	3c 93       	st	X, r19
 94c:	07 c0       	rjmp	.+14     	; 0x95c <__stack+0xfd>
 94e:	39 e6       	ldi	r19, 0x69	; 105
 950:	f6 01       	movw	r30, r12
 952:	30 83       	st	Z, r19
 954:	3e e6       	ldi	r19, 0x6E	; 110
 956:	31 83       	std	Z+1, r19	; 0x01
 958:	36 e6       	ldi	r19, 0x66	; 102
 95a:	32 83       	std	Z+2, r19	; 0x02
 95c:	fc 01       	movw	r30, r24
 95e:	32 2f       	mov	r19, r18
 960:	40 e2       	ldi	r20, 0x20	; 32
 962:	33 23       	and	r19, r19
 964:	19 f0       	breq	.+6      	; 0x96c <__stack+0x10d>
 966:	41 93       	st	Z+, r20
 968:	31 50       	subi	r19, 0x01	; 1
 96a:	fb cf       	rjmp	.-10     	; 0x962 <__stack+0x103>
 96c:	fc 01       	movw	r30, r24
 96e:	e2 0f       	add	r30, r18
 970:	f1 1d       	adc	r31, r1
 972:	10 82       	st	Z, r1
 974:	8e ef       	ldi	r24, 0xFE	; 254
 976:	9f ef       	ldi	r25, 0xFF	; 255
 978:	a6 c0       	rjmp	.+332    	; 0xac6 <__stack+0x267>
 97a:	21 e0       	ldi	r18, 0x01	; 1
 97c:	30 e0       	ldi	r19, 0x00	; 0
 97e:	91 11       	cpse	r25, r1
 980:	02 c0       	rjmp	.+4      	; 0x986 <__stack+0x127>
 982:	20 e0       	ldi	r18, 0x00	; 0
 984:	30 e0       	ldi	r19, 0x00	; 0
 986:	16 16       	cp	r1, r22
 988:	17 06       	cpc	r1, r23
 98a:	1c f4       	brge	.+6      	; 0x992 <__stack+0x133>
 98c:	fb 01       	movw	r30, r22
 98e:	31 96       	adiw	r30, 0x01	; 1
 990:	02 c0       	rjmp	.+4      	; 0x996 <__stack+0x137>
 992:	e1 e0       	ldi	r30, 0x01	; 1
 994:	f0 e0       	ldi	r31, 0x00	; 0
 996:	2e 0f       	add	r18, r30
 998:	3f 1f       	adc	r19, r31
 99a:	bb 20       	and	r11, r11
 99c:	21 f0       	breq	.+8      	; 0x9a6 <__stack+0x147>
 99e:	eb 2d       	mov	r30, r11
 9a0:	f0 e0       	ldi	r31, 0x00	; 0
 9a2:	31 96       	adiw	r30, 0x01	; 1
 9a4:	02 c0       	rjmp	.+4      	; 0x9aa <__stack+0x14b>
 9a6:	e0 e0       	ldi	r30, 0x00	; 0
 9a8:	f0 e0       	ldi	r31, 0x00	; 0
 9aa:	2e 0f       	add	r18, r30
 9ac:	3f 1f       	adc	r19, r31
 9ae:	e1 2f       	mov	r30, r17
 9b0:	f0 e0       	ldi	r31, 0x00	; 0
 9b2:	2e 17       	cp	r18, r30
 9b4:	3f 07       	cpc	r19, r31
 9b6:	1c f4       	brge	.+6      	; 0x9be <__stack+0x15f>
 9b8:	12 1b       	sub	r17, r18
 9ba:	21 2f       	mov	r18, r17
 9bc:	01 c0       	rjmp	.+2      	; 0x9c0 <__stack+0x161>
 9be:	20 e0       	ldi	r18, 0x00	; 0
 9c0:	8e 2d       	mov	r24, r14
 9c2:	88 71       	andi	r24, 0x18	; 24
 9c4:	59 f4       	brne	.+22     	; 0x9dc <__stack+0x17d>
 9c6:	f6 01       	movw	r30, r12
 9c8:	82 2f       	mov	r24, r18
 9ca:	30 e2       	ldi	r19, 0x20	; 32
 9cc:	88 23       	and	r24, r24
 9ce:	19 f0       	breq	.+6      	; 0x9d6 <__stack+0x177>
 9d0:	31 93       	st	Z+, r19
 9d2:	81 50       	subi	r24, 0x01	; 1
 9d4:	fb cf       	rjmp	.-10     	; 0x9cc <__stack+0x16d>
 9d6:	c2 0e       	add	r12, r18
 9d8:	d1 1c       	adc	r13, r1
 9da:	20 e0       	ldi	r18, 0x00	; 0
 9dc:	99 23       	and	r25, r25
 9de:	29 f0       	breq	.+10     	; 0x9ea <__stack+0x18b>
 9e0:	d6 01       	movw	r26, r12
 9e2:	9c 93       	st	X, r25
 9e4:	f6 01       	movw	r30, r12
 9e6:	31 96       	adiw	r30, 0x01	; 1
 9e8:	6f 01       	movw	r12, r30
 9ea:	51 11       	cpse	r21, r1
 9ec:	0b c0       	rjmp	.+22     	; 0xa04 <__stack+0x1a5>
 9ee:	f6 01       	movw	r30, r12
 9f0:	82 2f       	mov	r24, r18
 9f2:	90 e3       	ldi	r25, 0x30	; 48
 9f4:	88 23       	and	r24, r24
 9f6:	19 f0       	breq	.+6      	; 0x9fe <__stack+0x19f>
 9f8:	91 93       	st	Z+, r25
 9fa:	81 50       	subi	r24, 0x01	; 1
 9fc:	fb cf       	rjmp	.-10     	; 0x9f4 <__stack+0x195>
 9fe:	c2 0e       	add	r12, r18
 a00:	d1 1c       	adc	r13, r1
 a02:	20 e0       	ldi	r18, 0x00	; 0
 a04:	0f 2d       	mov	r16, r15
 a06:	06 0f       	add	r16, r22
 a08:	9a 81       	ldd	r25, Y+2	; 0x02
 a0a:	34 2f       	mov	r19, r20
 a0c:	30 71       	andi	r19, 0x10	; 16
 a0e:	44 ff       	sbrs	r20, 4
 a10:	03 c0       	rjmp	.+6      	; 0xa18 <__stack+0x1b9>
 a12:	91 33       	cpi	r25, 0x31	; 49
 a14:	09 f4       	brne	.+2      	; 0xa18 <__stack+0x1b9>
 a16:	01 50       	subi	r16, 0x01	; 1
 a18:	10 16       	cp	r1, r16
 a1a:	24 f4       	brge	.+8      	; 0xa24 <__stack+0x1c5>
 a1c:	09 30       	cpi	r16, 0x09	; 9
 a1e:	18 f0       	brcs	.+6      	; 0xa26 <__stack+0x1c7>
 a20:	08 e0       	ldi	r16, 0x08	; 8
 a22:	01 c0       	rjmp	.+2      	; 0xa26 <__stack+0x1c7>
 a24:	01 e0       	ldi	r16, 0x01	; 1
 a26:	ab 01       	movw	r20, r22
 a28:	77 ff       	sbrs	r23, 7
 a2a:	02 c0       	rjmp	.+4      	; 0xa30 <__stack+0x1d1>
 a2c:	40 e0       	ldi	r20, 0x00	; 0
 a2e:	50 e0       	ldi	r21, 0x00	; 0
 a30:	fb 01       	movw	r30, r22
 a32:	e4 1b       	sub	r30, r20
 a34:	f5 0b       	sbc	r31, r21
 a36:	a1 e0       	ldi	r26, 0x01	; 1
 a38:	b0 e0       	ldi	r27, 0x00	; 0
 a3a:	ac 0f       	add	r26, r28
 a3c:	bd 1f       	adc	r27, r29
 a3e:	ea 0f       	add	r30, r26
 a40:	fb 1f       	adc	r31, r27
 a42:	8e e2       	ldi	r24, 0x2E	; 46
 a44:	a8 2e       	mov	r10, r24
 a46:	4b 01       	movw	r8, r22
 a48:	80 1a       	sub	r8, r16
 a4a:	91 08       	sbc	r9, r1
 a4c:	0b 2d       	mov	r16, r11
 a4e:	10 e0       	ldi	r17, 0x00	; 0
 a50:	11 95       	neg	r17
 a52:	01 95       	neg	r16
 a54:	11 09       	sbc	r17, r1
 a56:	4f 3f       	cpi	r20, 0xFF	; 255
 a58:	bf ef       	ldi	r27, 0xFF	; 255
 a5a:	5b 07       	cpc	r21, r27
 a5c:	21 f4       	brne	.+8      	; 0xa66 <__stack+0x207>
 a5e:	d6 01       	movw	r26, r12
 a60:	ac 92       	st	X, r10
 a62:	11 96       	adiw	r26, 0x01	; 1
 a64:	6d 01       	movw	r12, r26
 a66:	64 17       	cp	r22, r20
 a68:	75 07       	cpc	r23, r21
 a6a:	2c f0       	brlt	.+10     	; 0xa76 <__stack+0x217>
 a6c:	84 16       	cp	r8, r20
 a6e:	95 06       	cpc	r9, r21
 a70:	14 f4       	brge	.+4      	; 0xa76 <__stack+0x217>
 a72:	81 81       	ldd	r24, Z+1	; 0x01
 a74:	01 c0       	rjmp	.+2      	; 0xa78 <__stack+0x219>
 a76:	80 e3       	ldi	r24, 0x30	; 48
 a78:	41 50       	subi	r20, 0x01	; 1
 a7a:	51 09       	sbc	r21, r1
 a7c:	31 96       	adiw	r30, 0x01	; 1
 a7e:	d6 01       	movw	r26, r12
 a80:	11 96       	adiw	r26, 0x01	; 1
 a82:	7d 01       	movw	r14, r26
 a84:	40 17       	cp	r20, r16
 a86:	51 07       	cpc	r21, r17
 a88:	24 f0       	brlt	.+8      	; 0xa92 <__stack+0x233>
 a8a:	d6 01       	movw	r26, r12
 a8c:	8c 93       	st	X, r24
 a8e:	67 01       	movw	r12, r14
 a90:	e2 cf       	rjmp	.-60     	; 0xa56 <__stack+0x1f7>
 a92:	64 17       	cp	r22, r20
 a94:	75 07       	cpc	r23, r21
 a96:	39 f4       	brne	.+14     	; 0xaa6 <__stack+0x247>
 a98:	96 33       	cpi	r25, 0x36	; 54
 a9a:	20 f4       	brcc	.+8      	; 0xaa4 <__stack+0x245>
 a9c:	95 33       	cpi	r25, 0x35	; 53
 a9e:	19 f4       	brne	.+6      	; 0xaa6 <__stack+0x247>
 aa0:	31 11       	cpse	r19, r1
 aa2:	01 c0       	rjmp	.+2      	; 0xaa6 <__stack+0x247>
 aa4:	81 e3       	ldi	r24, 0x31	; 49
 aa6:	f6 01       	movw	r30, r12
 aa8:	80 83       	st	Z, r24
 aaa:	f7 01       	movw	r30, r14
 aac:	82 2f       	mov	r24, r18
 aae:	90 e2       	ldi	r25, 0x20	; 32
 ab0:	88 23       	and	r24, r24
 ab2:	19 f0       	breq	.+6      	; 0xaba <__stack+0x25b>
 ab4:	91 93       	st	Z+, r25
 ab6:	81 50       	subi	r24, 0x01	; 1
 ab8:	fb cf       	rjmp	.-10     	; 0xab0 <__stack+0x251>
 aba:	f7 01       	movw	r30, r14
 abc:	e2 0f       	add	r30, r18
 abe:	f1 1d       	adc	r31, r1
 ac0:	10 82       	st	Z, r1
 ac2:	80 e0       	ldi	r24, 0x00	; 0
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	29 96       	adiw	r28, 0x09	; 9
 ac8:	ec e0       	ldi	r30, 0x0C	; 12
 aca:	0c 94 61 06 	jmp	0xcc2	; 0xcc2 <__epilogue_restores__+0xc>

00000ace <__ftoa_engine>:
 ace:	28 30       	cpi	r18, 0x08	; 8
 ad0:	08 f0       	brcs	.+2      	; 0xad4 <__ftoa_engine+0x6>
 ad2:	27 e0       	ldi	r18, 0x07	; 7
 ad4:	33 27       	eor	r19, r19
 ad6:	da 01       	movw	r26, r20
 ad8:	99 0f       	add	r25, r25
 ada:	31 1d       	adc	r19, r1
 adc:	87 fd       	sbrc	r24, 7
 ade:	91 60       	ori	r25, 0x01	; 1
 ae0:	00 96       	adiw	r24, 0x00	; 0
 ae2:	61 05       	cpc	r22, r1
 ae4:	71 05       	cpc	r23, r1
 ae6:	39 f4       	brne	.+14     	; 0xaf6 <__ftoa_engine+0x28>
 ae8:	32 60       	ori	r19, 0x02	; 2
 aea:	2e 5f       	subi	r18, 0xFE	; 254
 aec:	3d 93       	st	X+, r19
 aee:	30 e3       	ldi	r19, 0x30	; 48
 af0:	2a 95       	dec	r18
 af2:	e1 f7       	brne	.-8      	; 0xaec <__ftoa_engine+0x1e>
 af4:	08 95       	ret
 af6:	9f 3f       	cpi	r25, 0xFF	; 255
 af8:	30 f0       	brcs	.+12     	; 0xb06 <__ftoa_engine+0x38>
 afa:	80 38       	cpi	r24, 0x80	; 128
 afc:	71 05       	cpc	r23, r1
 afe:	61 05       	cpc	r22, r1
 b00:	09 f0       	breq	.+2      	; 0xb04 <__ftoa_engine+0x36>
 b02:	3c 5f       	subi	r19, 0xFC	; 252
 b04:	3c 5f       	subi	r19, 0xFC	; 252
 b06:	3d 93       	st	X+, r19
 b08:	91 30       	cpi	r25, 0x01	; 1
 b0a:	08 f0       	brcs	.+2      	; 0xb0e <__ftoa_engine+0x40>
 b0c:	80 68       	ori	r24, 0x80	; 128
 b0e:	91 1d       	adc	r25, r1
 b10:	df 93       	push	r29
 b12:	cf 93       	push	r28
 b14:	1f 93       	push	r17
 b16:	0f 93       	push	r16
 b18:	ff 92       	push	r15
 b1a:	ef 92       	push	r14
 b1c:	19 2f       	mov	r17, r25
 b1e:	98 7f       	andi	r25, 0xF8	; 248
 b20:	96 95       	lsr	r25
 b22:	e9 2f       	mov	r30, r25
 b24:	96 95       	lsr	r25
 b26:	96 95       	lsr	r25
 b28:	e9 0f       	add	r30, r25
 b2a:	ff 27       	eor	r31, r31
 b2c:	e2 55       	subi	r30, 0x52	; 82
 b2e:	ff 4f       	sbci	r31, 0xFF	; 255
 b30:	99 27       	eor	r25, r25
 b32:	33 27       	eor	r19, r19
 b34:	ee 24       	eor	r14, r14
 b36:	ff 24       	eor	r15, r15
 b38:	a7 01       	movw	r20, r14
 b3a:	e7 01       	movw	r28, r14
 b3c:	05 90       	lpm	r0, Z+
 b3e:	08 94       	sec
 b40:	07 94       	ror	r0
 b42:	28 f4       	brcc	.+10     	; 0xb4e <__ftoa_engine+0x80>
 b44:	36 0f       	add	r19, r22
 b46:	e7 1e       	adc	r14, r23
 b48:	f8 1e       	adc	r15, r24
 b4a:	49 1f       	adc	r20, r25
 b4c:	51 1d       	adc	r21, r1
 b4e:	66 0f       	add	r22, r22
 b50:	77 1f       	adc	r23, r23
 b52:	88 1f       	adc	r24, r24
 b54:	99 1f       	adc	r25, r25
 b56:	06 94       	lsr	r0
 b58:	a1 f7       	brne	.-24     	; 0xb42 <__ftoa_engine+0x74>
 b5a:	05 90       	lpm	r0, Z+
 b5c:	07 94       	ror	r0
 b5e:	28 f4       	brcc	.+10     	; 0xb6a <__ftoa_engine+0x9c>
 b60:	e7 0e       	add	r14, r23
 b62:	f8 1e       	adc	r15, r24
 b64:	49 1f       	adc	r20, r25
 b66:	56 1f       	adc	r21, r22
 b68:	c1 1d       	adc	r28, r1
 b6a:	77 0f       	add	r23, r23
 b6c:	88 1f       	adc	r24, r24
 b6e:	99 1f       	adc	r25, r25
 b70:	66 1f       	adc	r22, r22
 b72:	06 94       	lsr	r0
 b74:	a1 f7       	brne	.-24     	; 0xb5e <__ftoa_engine+0x90>
 b76:	05 90       	lpm	r0, Z+
 b78:	07 94       	ror	r0
 b7a:	28 f4       	brcc	.+10     	; 0xb86 <__ftoa_engine+0xb8>
 b7c:	f8 0e       	add	r15, r24
 b7e:	49 1f       	adc	r20, r25
 b80:	56 1f       	adc	r21, r22
 b82:	c7 1f       	adc	r28, r23
 b84:	d1 1d       	adc	r29, r1
 b86:	88 0f       	add	r24, r24
 b88:	99 1f       	adc	r25, r25
 b8a:	66 1f       	adc	r22, r22
 b8c:	77 1f       	adc	r23, r23
 b8e:	06 94       	lsr	r0
 b90:	a1 f7       	brne	.-24     	; 0xb7a <__ftoa_engine+0xac>
 b92:	05 90       	lpm	r0, Z+
 b94:	07 94       	ror	r0
 b96:	20 f4       	brcc	.+8      	; 0xba0 <__ftoa_engine+0xd2>
 b98:	49 0f       	add	r20, r25
 b9a:	56 1f       	adc	r21, r22
 b9c:	c7 1f       	adc	r28, r23
 b9e:	d8 1f       	adc	r29, r24
 ba0:	99 0f       	add	r25, r25
 ba2:	66 1f       	adc	r22, r22
 ba4:	77 1f       	adc	r23, r23
 ba6:	88 1f       	adc	r24, r24
 ba8:	06 94       	lsr	r0
 baa:	a9 f7       	brne	.-22     	; 0xb96 <__ftoa_engine+0xc8>
 bac:	84 91       	lpm	r24, Z
 bae:	10 95       	com	r17
 bb0:	17 70       	andi	r17, 0x07	; 7
 bb2:	41 f0       	breq	.+16     	; 0xbc4 <__ftoa_engine+0xf6>
 bb4:	d6 95       	lsr	r29
 bb6:	c7 95       	ror	r28
 bb8:	57 95       	ror	r21
 bba:	47 95       	ror	r20
 bbc:	f7 94       	ror	r15
 bbe:	e7 94       	ror	r14
 bc0:	1a 95       	dec	r17
 bc2:	c1 f7       	brne	.-16     	; 0xbb4 <__ftoa_engine+0xe6>
 bc4:	e4 e5       	ldi	r30, 0x54	; 84
 bc6:	f0 e0       	ldi	r31, 0x00	; 0
 bc8:	68 94       	set
 bca:	15 90       	lpm	r1, Z+
 bcc:	15 91       	lpm	r17, Z+
 bce:	35 91       	lpm	r19, Z+
 bd0:	65 91       	lpm	r22, Z+
 bd2:	95 91       	lpm	r25, Z+
 bd4:	05 90       	lpm	r0, Z+
 bd6:	7f e2       	ldi	r23, 0x2F	; 47
 bd8:	73 95       	inc	r23
 bda:	e1 18       	sub	r14, r1
 bdc:	f1 0a       	sbc	r15, r17
 bde:	43 0b       	sbc	r20, r19
 be0:	56 0b       	sbc	r21, r22
 be2:	c9 0b       	sbc	r28, r25
 be4:	d0 09       	sbc	r29, r0
 be6:	c0 f7       	brcc	.-16     	; 0xbd8 <__ftoa_engine+0x10a>
 be8:	e1 0c       	add	r14, r1
 bea:	f1 1e       	adc	r15, r17
 bec:	43 1f       	adc	r20, r19
 bee:	56 1f       	adc	r21, r22
 bf0:	c9 1f       	adc	r28, r25
 bf2:	d0 1d       	adc	r29, r0
 bf4:	7e f4       	brtc	.+30     	; 0xc14 <__ftoa_engine+0x146>
 bf6:	70 33       	cpi	r23, 0x30	; 48
 bf8:	11 f4       	brne	.+4      	; 0xbfe <__ftoa_engine+0x130>
 bfa:	8a 95       	dec	r24
 bfc:	e6 cf       	rjmp	.-52     	; 0xbca <__ftoa_engine+0xfc>
 bfe:	e8 94       	clt
 c00:	01 50       	subi	r16, 0x01	; 1
 c02:	30 f0       	brcs	.+12     	; 0xc10 <__ftoa_engine+0x142>
 c04:	08 0f       	add	r16, r24
 c06:	0a f4       	brpl	.+2      	; 0xc0a <__ftoa_engine+0x13c>
 c08:	00 27       	eor	r16, r16
 c0a:	02 17       	cp	r16, r18
 c0c:	08 f4       	brcc	.+2      	; 0xc10 <__ftoa_engine+0x142>
 c0e:	20 2f       	mov	r18, r16
 c10:	23 95       	inc	r18
 c12:	02 2f       	mov	r16, r18
 c14:	7a 33       	cpi	r23, 0x3A	; 58
 c16:	28 f0       	brcs	.+10     	; 0xc22 <__ftoa_engine+0x154>
 c18:	79 e3       	ldi	r23, 0x39	; 57
 c1a:	7d 93       	st	X+, r23
 c1c:	2a 95       	dec	r18
 c1e:	e9 f7       	brne	.-6      	; 0xc1a <__ftoa_engine+0x14c>
 c20:	10 c0       	rjmp	.+32     	; 0xc42 <__ftoa_engine+0x174>
 c22:	7d 93       	st	X+, r23
 c24:	2a 95       	dec	r18
 c26:	89 f6       	brne	.-94     	; 0xbca <__ftoa_engine+0xfc>
 c28:	06 94       	lsr	r0
 c2a:	97 95       	ror	r25
 c2c:	67 95       	ror	r22
 c2e:	37 95       	ror	r19
 c30:	17 95       	ror	r17
 c32:	17 94       	ror	r1
 c34:	e1 18       	sub	r14, r1
 c36:	f1 0a       	sbc	r15, r17
 c38:	43 0b       	sbc	r20, r19
 c3a:	56 0b       	sbc	r21, r22
 c3c:	c9 0b       	sbc	r28, r25
 c3e:	d0 09       	sbc	r29, r0
 c40:	98 f0       	brcs	.+38     	; 0xc68 <__ftoa_engine+0x19a>
 c42:	23 95       	inc	r18
 c44:	7e 91       	ld	r23, -X
 c46:	73 95       	inc	r23
 c48:	7a 33       	cpi	r23, 0x3A	; 58
 c4a:	08 f0       	brcs	.+2      	; 0xc4e <__ftoa_engine+0x180>
 c4c:	70 e3       	ldi	r23, 0x30	; 48
 c4e:	7c 93       	st	X, r23
 c50:	20 13       	cpse	r18, r16
 c52:	b8 f7       	brcc	.-18     	; 0xc42 <__ftoa_engine+0x174>
 c54:	7e 91       	ld	r23, -X
 c56:	70 61       	ori	r23, 0x10	; 16
 c58:	7d 93       	st	X+, r23
 c5a:	30 f0       	brcs	.+12     	; 0xc68 <__ftoa_engine+0x19a>
 c5c:	83 95       	inc	r24
 c5e:	71 e3       	ldi	r23, 0x31	; 49
 c60:	7d 93       	st	X+, r23
 c62:	70 e3       	ldi	r23, 0x30	; 48
 c64:	2a 95       	dec	r18
 c66:	e1 f7       	brne	.-8      	; 0xc60 <__ftoa_engine+0x192>
 c68:	11 24       	eor	r1, r1
 c6a:	ef 90       	pop	r14
 c6c:	ff 90       	pop	r15
 c6e:	0f 91       	pop	r16
 c70:	1f 91       	pop	r17
 c72:	cf 91       	pop	r28
 c74:	df 91       	pop	r29
 c76:	99 27       	eor	r25, r25
 c78:	87 fd       	sbrc	r24, 7
 c7a:	90 95       	com	r25
 c7c:	08 95       	ret

00000c7e <__prologue_saves__>:
 c7e:	2f 92       	push	r2
 c80:	3f 92       	push	r3
 c82:	4f 92       	push	r4
 c84:	5f 92       	push	r5
 c86:	6f 92       	push	r6
 c88:	7f 92       	push	r7
 c8a:	8f 92       	push	r8
 c8c:	9f 92       	push	r9
 c8e:	af 92       	push	r10
 c90:	bf 92       	push	r11
 c92:	cf 92       	push	r12
 c94:	df 92       	push	r13
 c96:	ef 92       	push	r14
 c98:	ff 92       	push	r15
 c9a:	0f 93       	push	r16
 c9c:	1f 93       	push	r17
 c9e:	cf 93       	push	r28
 ca0:	df 93       	push	r29
 ca2:	cd b7       	in	r28, 0x3d	; 61
 ca4:	de b7       	in	r29, 0x3e	; 62
 ca6:	ca 1b       	sub	r28, r26
 ca8:	db 0b       	sbc	r29, r27
 caa:	0f b6       	in	r0, 0x3f	; 63
 cac:	f8 94       	cli
 cae:	de bf       	out	0x3e, r29	; 62
 cb0:	0f be       	out	0x3f, r0	; 63
 cb2:	cd bf       	out	0x3d, r28	; 61
 cb4:	09 94       	ijmp

00000cb6 <__epilogue_restores__>:
 cb6:	2a 88       	ldd	r2, Y+18	; 0x12
 cb8:	39 88       	ldd	r3, Y+17	; 0x11
 cba:	48 88       	ldd	r4, Y+16	; 0x10
 cbc:	5f 84       	ldd	r5, Y+15	; 0x0f
 cbe:	6e 84       	ldd	r6, Y+14	; 0x0e
 cc0:	7d 84       	ldd	r7, Y+13	; 0x0d
 cc2:	8c 84       	ldd	r8, Y+12	; 0x0c
 cc4:	9b 84       	ldd	r9, Y+11	; 0x0b
 cc6:	aa 84       	ldd	r10, Y+10	; 0x0a
 cc8:	b9 84       	ldd	r11, Y+9	; 0x09
 cca:	c8 84       	ldd	r12, Y+8	; 0x08
 ccc:	df 80       	ldd	r13, Y+7	; 0x07
 cce:	ee 80       	ldd	r14, Y+6	; 0x06
 cd0:	fd 80       	ldd	r15, Y+5	; 0x05
 cd2:	0c 81       	ldd	r16, Y+4	; 0x04
 cd4:	1b 81       	ldd	r17, Y+3	; 0x03
 cd6:	aa 81       	ldd	r26, Y+2	; 0x02
 cd8:	b9 81       	ldd	r27, Y+1	; 0x01
 cda:	ce 0f       	add	r28, r30
 cdc:	d1 1d       	adc	r29, r1
 cde:	0f b6       	in	r0, 0x3f	; 63
 ce0:	f8 94       	cli
 ce2:	de bf       	out	0x3e, r29	; 62
 ce4:	0f be       	out	0x3f, r0	; 63
 ce6:	cd bf       	out	0x3d, r28	; 61
 ce8:	ed 01       	movw	r28, r26
 cea:	08 95       	ret

00000cec <_exit>:
 cec:	f8 94       	cli

00000cee <__stop_program>:
 cee:	ff cf       	rjmp	.-2      	; 0xcee <__stop_program>
